{"version":3,"sources":["Context.js","components/Chart.js","App.js","serviceWorker.js","index.js"],"names":["WINDOW","dateOptions","year","month","day","range","min","max","Math","random","toFixed","getFirstDates","num","dates","today","Date","i","push","setDate","getDate","toLocaleDateString","Context","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","ledger","history","labels","datasets","initNetWorth","active","data","inherits","createClass","key","value","that","x","timer","setInterval","window","clearInterval","increment","l","date","labelsNew","shift","firstVals","endVal","newArray","label","makeNewArray","borderColor","backgroundColor","s","txn","hc","slice","hcData","last","length","toPush","type","amount","colors","returnColors","a","newDate","arr","getNextDate","incrementLabels","newData","decide","returnCats","ledgerCopy","datasetsCopy","includes","title","forEach","val","dataCopy","console","log","newCat","setState","assign","processNetWorth","cats","keys","sum","reduce","total","curr","decision","copy","some","times","vendor","vendors","floor","String","makeTransaction","category","txns","10","display","color","button","31","32","50","13","4","35","0","2","alcohol/bars","gas/fuel","groceries","coffeeshop","gym payment","restaurant","invest","cellphone","income","react_default","createElement","Component","Chart","defaultProps","displayTitle","displayLegend","legendPosition","titleSize","LineChart","_Chart","props","chartData","es","height","options","animation","duration","responsive","maintainAspectRatio","legend","usePointStyle","position","netWorth","txnsGeneral","leftOfTitle","Header","className","first","second","ChartComponent","properties","App_Header","config","Chart_LineChart","App","_Context","apply","arguments","c","styles","border","href","style","t","borderBottom","Fragment","App_ChartComponent","makeButtons","makeTxns","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd2d7e54.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst NUMDAYS = 15;\nconst WINDOW = 30;\nconst CAPITAL = 3000;\nvar dateOptions = { year: '2-digit', month: 'numeric', day: 'numeric' };\n\nfunction range(min,max) {\n    return (Math.random()*(max-min+1)+min).toFixed(2);\n}\n\nfunction makeTransaction(type, date) {\n     var vendor = type.vendors[Math.floor(range(0, type.vendors.length-1))];\n\n     return {\n         type: type.type,\n         date: new Date(date).toLocaleDateString(\"en-US\", {month: 'short', day: 'numeric'}),\n         amount: String(range(type.min, type.max)),\n         vendor: vendor,\n         title: type.title\n     };\n}\n\nfunction getFirstDates(num) {\n    var dates = [];\n\tvar today = new Date()\n\n    for(var i = 0; i < num; i++) {\n        dates.push(new Date(today.setDate(today.getDate() + 1)).toLocaleDateString(\"en-US\", dateOptions));\n    }\n    return dates;\n}\n\nfunction getNextDate(arr) {\n\tvar last = new Date(arr[arr.length-1])\n\t// console.log(last);\n\treturn new Date(last.setDate(last.getDate() + 1)).toLocaleDateString(\"en-US\", dateOptions)\n}\n\nexport class Context extends Component {\n    constructor() {\n        super()\n        this.state = {\n            ledger: [],\n            history: {\n                labels: getFirstDates(WINDOW),\n                datasets: [ this.initNetWorth() ]\n            },\n            active: [\"0\"],\n            data: {\n                labels: getFirstDates(WINDOW),\n                datasets: []\n            },\n        };\n    }\n\n    componentDidMount() {\n      var that = this;\n      var x = 0;\n      this.timer = setInterval(function() {\n          if (++x === NUMDAYS) {\n                window.clearInterval(that.timer);\n            }\n          return that.increment(that.state)\n      }, 1000)\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.timer)\n    }\n\n    incrementLabels(l, date) {\n        var labelsNew = l;\n        labelsNew.push(date)\n        labelsNew.shift()\n        return labelsNew;\n    }\n\n    makeNewArray(firstVals, endVal) {\n        var newArray = [];\n        for(var i = 0; i < WINDOW; i++) { newArray.push(firstVals); }\n        newArray.push(endVal)\n        return newArray;\n    }\n    initNetWorth() {\n        return {\n            label: 'Net Worth',\n            data: this.makeNewArray(CAPITAL, CAPITAL),\n            borderColor: 'gainsboro',\n            backgroundColor: 'rgba(0, 0, 0, 0)',\n        }\n    }\n    processNetWorth(s, txn) {\n        //s is state, txn is transaction\n        const hc = s.history.datasets.slice(0); //historyCopy\n        const hcData = hc[0].data.slice(0);\n        var last = hcData[hcData.length-1]\n        var toPush = 0;\n        if (txn.type == \"debit\") toPush = last-(+txn.amount)\n        else if (txn.type==\"neither\") toPush = last\n        else toPush = last+(+txn.amount)\n        hcData.push(toPush)\n        // hcData[hcData.length-1] = hcData[hcData.length-1].toFixed(2)\n        hcData.shift()\n        hc[0].data = hcData\n        return hc;\n    }\n    increment() {\n        var colors = this.returnColors()\n        var s = this.state;\n        var a = this.state.active;\n        var newDate = getNextDate(s.data.labels);\n\n        const labelsNew = this.incrementLabels(s.data.labels, newDate)\n        const newData = this.decide(this.returnCats(), newDate);\n        const ledgerCopy = s.ledger.slice(0);\n        ledgerCopy.push(newData);\n\n        const datasetsCopy = s.data.datasets.slice(0);\n\n        if (!a.includes(newData.title)) {\n            a.push(newData.title)\n\n            // increment all other categories w 0 spent\n            datasetsCopy.forEach(function(val, i) {\n                var dataCopy = datasetsCopy[i].data.slice(0);\n                // console.log(dataCopy)\n                dataCopy.push(0);\n                dataCopy.shift()\n                datasetsCopy[i].data = dataCopy;\n            })\n\n            var newCat = {\n                label: newData.title,\n                data: this.makeNewArray(0, newData.amount),\n                borderColor: colors[newData.title],\n                backgroundColor: 'rgba(0, 0, 0, 0)',\n            }\n\n            datasetsCopy.push(newCat)\n\n        } else {\n            datasetsCopy.forEach(function(val, i) {\n                var dataCopy = datasetsCopy[i].data.slice(0);\n\n                //if chosen category already exists and needs an expense added\n                //to it, catch it\n                if (val.label===newData.title) {\n                    dataCopy.push(newData.amount);\n                    console.log(\"adding expense to \" + newData.title + \" category\")\n                }\n                //then increment all others w 0 spent\n                else { dataCopy.push(0); }\n                dataCopy.shift()\n                // console.log(dataCopy)\n                datasetsCopy[i].data = dataCopy;\n            })\n        }\n\n\n        // console.log(ledgerCopy)\n        // update the state object\n        // this.state.ledger = data;\n        // set the state\n        // this.setState({ ledger: ledgerCopy });\n\n\n        this.setState({\n            data: Object.assign({}, s.data, {\n                datasets: datasetsCopy,\n                labels: labelsNew\n            }),\n            ledger: ledgerCopy,\n            history: Object.assign({}, s.history, {\n                datasets: this.processNetWorth(s, newData),\n                labels: labelsNew\n            }),\n        });\n        // console.log(this.state.ledger)\n        // this.incrementLedger(newData);\n    }\n\n    decide(cats, date) {\n        var arr = Object.keys(cats);\n        var sum = arr.reduce((total, curr) => +total+ +curr, 0);\n        var decision = 0;\n        var copy = [];\n\n        arr.some(function (val, i) {\n            copy[i] = (i===0) ? +arr[i] : +arr[i] + +copy[i-1];\n            decision = val;\n            return range(0, sum) < copy[i];\n        });\n\n        cats[decision].times += 1;\n        console.log(cats)\n        return makeTransaction(cats[decision], date)\n    }\n\n    tick() {\n        this.setState({\n            category: this.decide(this.returnCats()),\n            txns: this.increment()\n        });\n    }\n\n    returnCats() {\n        var colors = this.returnColors();\n        return {\n            10: {\n                title: \"gym payment\",\n                display: \"Pay gym membership\",\n                color: colors[\"gym payment\"],\n                button: false,\n                times: 0,\n                vendors: [\n                    \"Anytime Fitness\"\n                ],\n                min: 50,\n                max: 50,\n                type: 'debit'\n            },\n            31: {\n                title: \"alcohol/bars\",\n                display: \"Go to a bar\",\n                color: colors[\"alcohol/bars\"],\n                button: true,\n                times: 0,\n                vendors: [\n                    \"Workhorse Bar\",\n                    \"drink.well.\",\n                    \"The Parlor\",\n                    \"Weather Up\"\n                ],\n                min: 5,\n                max: 50,\n                type: 'debit'\n            },\n            32: {\n                title: \"groceries\",\n                display: \"Pick up groceries\",\n                color: colors[\"groceries\"],\n                button: true,\n                times: 0,\n                vendors: [\n                    \"Fresh Plus Grocery\",\n                    \"Trader Joe's\",\n                    \"Whole Foods Great Hills Rd\",\n                    \"Dierbergs\"\n                ],\n                min: 10,\n                max: 80,\n                type: 'debit'\n            },\n            50: {\n                title: \"coffeeshop\",\n                display: \"Grab a coffee\",\n                color: colors[\"coffeeshop\"],\n                button: true,\n                times: 0,\n                vendors: [\n                    \"Quacks 43rd St Bakery\",\n                    \"Thunderbird Coffee\",\n                    \"Epoch North Loop\",\n                    \"Flightpath Coffeehouse\",\n                    \"Dolce Vita\",\n                    \"Monkey Nest Coffee\"\n                ],\n                min: 1.25,\n                max: 15,\n                type: 'debit'\n            },\n            13: {\n                title: \"gas/fuel\",\n                display: \"Get gas\",\n                color: colors[\"gas/fuel\"],\n                button: true,\n                times: 0,\n                vendors: [\n                    \"Shell 4429 Duval St\",\n                    \"Texaco Austin 5301 N Lamar\",\n                    \"Exxon\",\n                    \"North Loop Food Store\",\n                    \"Chevron Airport Blvd\",\n                    \"Gulf Gas Station\"\n                ],\n                min: 30,\n                max: 40,\n                type: 'debit'\n            },\n            4: {\n                title: \"cellphone\",\n                display: \"Pay cellphone bill\",\n                color: colors[\"cellphone\"],\n                button: false,\n                times: 0,\n                vendors: [\n                    \"ATT Thank you for your Online Payment\"\n                ],\n                min: 64,\n                max: 66,\n                type: 'debit'\n            },\n            35: {\n                title: \"restaurant\",\n                display: \"Go out to eat\",\n                color: colors[\"restaurant\"],\n                button: true,\n                times: 0,\n                vendors: [\n                    \"Foreign & Domestic\",\n                    \"East Side Pies\",\n                    \"Phara's\",\n                    \"Uchiko\",\n                    \"Chipotle\",\n                    \"Freebirds Airport Blvd\",\n                    \"Biscuits and Groovy\",\n                    \"Gordeaux's Donuts\",\n                    \"Habesha Ethiopian Restaurant and Bar\",\n                    \"Tyson's Tacos\"\n                ],\n                min: 12,\n                max: 50,\n                type: 'debit'\n            },\n            0: {\n                title: \"invest\",\n                display: \"Invest money\",\n                color: colors[\"invest\"],\n                button: true,\n                times: 0,\n                vendors:[\n                    \"Vanguard Investing\",\n                    \"Discover Online Banking\"\n                ],\n                min: 100,\n                max: 10000,\n                type: 'neither'\n            },\n            2: {\n                title: \"income\",\n                display: \"Earn some income\",\n                color: colors[\"income\"],\n                button: true,\n                times: 0,\n                vendors:[\n                    \"Freelancing\",\n                    \"Car washes\",\n                    \"Gave haircut\",\n                    \"Tutored\"\n                ],\n                min: 100,\n                max: 1000,\n                type: 'credit'\n            }\n\n        }\n    }\n\n    returnColors() {\n        return {\n            \"alcohol/bars\": '#A40E4C',\n            \"gas/fuel\": '#2C2C54',\n            \"groceries\": '#ACC3A6',\n            \"coffeeshop\": '#F5D6BA',\n            \"gym payment\": '#F49D6E',\n            \"restaurant\": 'rgba(60, 110, 113, 1)',\n            \"invest\": '#A7B0CA',\n            \"cellphone\": '#A5D86B',\n            \"income\": '#8EDCE6',\n        }\n    }\n    render() {\n        //             <h5>It is { String(this.state.category) }.</h5>\n        return (<div>\n        </div>)\n    }\n}\n\nexport default Context;\n","import React, { Component }from 'react';\nimport Context from '../Context'\nimport { Bar, Line, Pie } from 'react-chartjs-2';\n\nclass Chart extends Component {\n    static defaultProps = {\n        displayTitle: false,\n        displayLegend: true,\n        legendPosition: 'bottom',\n        titleSize: 25\n    }\n}\n\nexport class LineChart extends Chart {\n    constructor(props) {\n        super()\n        console.log(props)\n    }\n\n    render(){\n      if (this.props.type===\"networth\") { var data = this.props.chartData.history }\n      else { var data = this.props.chartData.data }\n      console.log(this.props)\n      return(\n        <div>\n        <Line\n              data = { data }\n              height={200}\n              options={{\n                  type: 'line',\n                  animation: {\n                      duration: 100,\n                      display: 'linear'\n                  },\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  legend: {\n                      labels : {usePointStyle: true},\n                      display: false,\n                      position: this.props.legendPosition\n                  }\n              }}\n        />\n        </div>\n      )\n    }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Context from './Context'\nimport { LineChart, BarChart, BarExample } from './components/Chart'\n\nconst netWorth = {\n    title: \"Net Worth Over Time\",\n    type: \"networth\"\n}\n\nlet txnsGeneral = {\n    title: \"Transactions Over Time\",\n    leftOfTitle: \"May 30, 2018\",\n    type: \"line\"\n}\n\nconst proportions = {\n    title: \"Spending in Each Category\",\n    type: \"donut\"\n}\n\nconst ledger = {\n    title: \"Ledger of Expenses\",\n    type: \"ledger\"\n}\n\nconst Header = function(props) {\n    return <div className='background'>\n        <div className=\"titleHolder\">\n                <span><b>{props.first}</b></span>\n                <span>{props.second}</span>\n                </div>\n          </div>;\n      }\n\n\nclass ChartComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            properties: props,\n        }\n        // console.log(props)\n    }\n\n    render() {\n      return (\n        <div>\n          <Header first={this.props.config.leftOfTitle} second={this.props.config.title}/>\n          <LineChart chartData={this.props.data} type={this.props.config.type} />\n        </div>\n      );\n    }\n}\n\nexport class App extends Context {\n    makeButtons() {\n        let total = [];\n        var cats = this.returnCats()\n        for (let c in cats) {\n            // console.log(cats[c]);\n            if (cats[c].button) {\n                var styles = {\n                    backgroundColor: cats[c].color,\n                    border: \"solid 1px \" +  cats[c].color\n                };\n            total.push(<a href=\"#\" style={styles} className={\"square_btn\"} key={c}>{cats[c].display}</a>)\n            }\n        }\n        return (total)\n    }\n    makeTxns() {\n        let total = [];\n        var ledger = this.state.ledger\n        var colors = this.returnColors()\n\n        for (let t in ledger) {\n            var styles = {\n                color: colors[ledger[t].title],\n                borderBottom: '1px dotted gainsboro'\n            };\n            total.push(\n                <tr href=\"#\" style={styles} className={\"ledgerRow\"} key={t}>\n                    <td>{ledger[t].date}</td>\n                    <td>{ledger[t].amount}</td>\n                    <td>{ledger[t].title}</td>\n                    <td>{ledger[t].vendor}</td>\n                </tr>)\n            }\n        return (total)\n    }\n\n  render() {\n    var data = this.state;\n    return (\n    <>\n      <div className=\"grid-container-2-left\">\n          <div>\n              <ChartComponent config={txnsGeneral} data = {data} />\n          </div>\n\n          <div>\n              <Header first=\"\" second=\"Add a Transaction:\"/>\n              <div className=\"buttonHolder\">\n              {this.makeButtons()}\n            </div>\n          </div>\n      </div>\n      <div className=\"grid-container-2-right\">\n          <div>\n          <ChartComponent config={txnsGeneral} data = { data }/>\n\n          </div>\n          <div>\n            <Header second={\"Ledger of Transactions\"} />\n            <div className=\"ledgerTable\">\n            <table>\n                <tbody>\n              <tr>\n                <th className=\"date\">{\"Date\"}</th>\n                <th className=\"amount\">{\"Amount\"}</th>\n                <th className=\"category\">{\"Category\"}</th>\n                <th className=\"vendor\">{\"Vendor\"}</th>\n              </tr>\n              {this.makeTxns()}\n              </tbody>\n            </table>\n            </div>\n          </div>\n      </div>\n      <div className=\"grid-container-1\">\n          <div>\n              <ChartComponent config={ netWorth } data = { data }/>\n          </div>\n      </div>\n    </>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}