{"version":3,"sources":["Context.js","components/Chart.js","App.js","serviceWorker.js","index.js"],"names":["WINDOW","dateOptions","year","month","day","range","min","max","Math","random","toFixed","getFirstDates","num","dates","today","Date","i","push","setDate","getDate","toLocaleDateString","Context","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","proportions","labels","datasets","data","backgroundColor","ledger","history","initNetWorth","active","inherits","createClass","key","value","that","x","timer","setInterval","window","clearInterval","increment","l","date","labelsNew","shift","firstVals","endVal","newArray","label","makeNewArray","borderColor","s","txn","hc","slice","hcData","last","length","toPush","type","amount","a","p","colors","returnColors","newDate","arr","getNextDate","incrementLabels","newData","decide","returnCats","ledgerCopy","datasetsCopy","prosCopy","includes","title","forEach","val","dataCopy","j","indexOf","pro","newCat","setState","assign","processNetWorth","cats","keys","sum","reduce","total","curr","decision","copy","some","times","console","log","vendor","vendors","floor","String","makeTransaction","category","txns","10","display","color","button","31","32","50","13","4","35","0","1","alcohol/bars","gas/fuel","groceries","coffeeshop","gym payment","restaurant","invest","cellphone","income","react_default","createElement","Component","Chart","defaultProps","displayTitle","displayLegend","legendPosition","titleSize","LineChart","_Chart","props","chartData","es","height","options","animation","duration","responsive","maintainAspectRatio","legend","usePointStyle","position","DoughnutChart","_Chart2","netWorth","txnsGeneral","leftOfTitle","Header","className","first","second","ChartComponent","properties","config","App_Header","Chart_DoughnutChart","Chart_LineChart","makeComponent","App","_Context","apply","arguments","c","styles","border","href","style","t","borderBottom","Fragment","App_ChartComponent","makeButtons","makeTxns","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f4e3ad3.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst NUMDAYS = 30;\nconst WINDOW = 30;\nconst CAPITAL = 3000;\nvar dateOptions = { year: '2-digit', month: 'numeric', day: 'numeric' };\n\nfunction range(min,max) {\n    return (Math.random()*(max-min+1)+min).toFixed(2);\n}\n\nfunction makeTransaction(type, date) {\n     var vendor = type.vendors[Math.floor(range(0, type.vendors.length-1))];\n\n     return {\n         type: type.type,\n         date: new Date(date).toLocaleDateString(\"en-US\", {month: 'short', day: 'numeric'}),\n         amount: String(range(type.min, type.max)),\n         vendor: vendor,\n         title: type.title\n     };\n}\n\nfunction getFirstDates(num) {\n    var dates = [];\n\tvar today = new Date()\n\n    for(var i = 0; i < num; i++) {\n        dates.push(new Date(today.setDate(today.getDate() + 1)).toLocaleDateString(\"en-US\", dateOptions));\n    }\n    return dates;\n}\n\nfunction getNextDate(arr) {\n\tvar last = new Date(arr[arr.length-1])\n\t// console.log(last);\n\treturn new Date(last.setDate(last.getDate() + 1)).toLocaleDateString(\"en-US\", dateOptions)\n}\n\nexport class Context extends Component {\n    constructor() {\n        super()\n        this.state = {\n            proportions: {\n                labels: [],\n                datasets: [{\n                    data: [],\n                    backgroundColor: [],\n                }]\n            },\n            ledger: [],\n            history: {\n                labels: getFirstDates(WINDOW),\n                datasets: [ this.initNetWorth() ]\n            },\n            active: [],\n            data: {\n                labels: getFirstDates(WINDOW),\n                datasets: []\n            },\n        };\n    }\n\n    componentDidMount() {\n      var that = this;\n      var x = 0;\n      this.timer = setInterval(function() {\n          if (++x === NUMDAYS) {\n                window.clearInterval(that.timer);\n            }\n          return that.increment(that.state)\n      }, 1000)\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.timer)\n    }\n\n    incrementLabels(l, date) {\n        var labelsNew = l;\n        labelsNew.push(date)\n        labelsNew.shift()\n        return labelsNew;\n    }\n\n    makeNewArray(firstVals, endVal) {\n        var newArray = [];\n        for(var i = 0; i < WINDOW; i++) { newArray.push(firstVals); }\n        newArray.push(endVal)\n        return newArray;\n    }\n\n    initNetWorth() {\n        return {\n            label: 'Net Worth',\n            data: this.makeNewArray(CAPITAL, CAPITAL),\n            borderColor: 'gainsboro',\n            backgroundColor: 'rgba(0, 0, 0, 0)',\n        }\n    }\n    processNetWorth(s, txn) {\n        //s is state, txn is transaction\n        const hc = s.history.datasets.slice(0); //historyCopy\n        const hcData = hc[0].data.slice(0);\n        var last = hcData[hcData.length-1]\n        var toPush = 0;\n        if (txn.type == \"debit\") toPush = last-(+txn.amount)\n        else if (txn.type==\"neither\") toPush = last\n        else toPush = last+(+txn.amount)\n        hcData.push(toPush)\n        // hcData[hcData.length-1] = hcData[hcData.length-1].toFixed(2)\n        hcData.shift()\n        hc[0].data = hcData\n        return hc;\n    }\n    xMethod(a, s, p, txn) {\n\n        return p;\n    }\n    increment() {\n        var colors = this.returnColors()\n        var s = this.state;\n        var a = this.state.active;\n        var newDate = getNextDate(s.data.labels);\n\n        const labelsNew = this.incrementLabels(s.data.labels, newDate)\n        const newData = this.decide(this.returnCats(), newDate);\n        const ledgerCopy = s.ledger.slice(0);\n        ledgerCopy.push(newData);\n\n        const datasetsCopy = s.data.datasets.slice(0);\n        var prosCopy = s.proportions.datasets.slice(0)\n        // console.log(proCopy)\n\n        if (!a.includes(newData.title)) {\n            a.push(newData.title)\n            prosCopy[0].data.push(+newData.amount)\n            prosCopy[0].backgroundColor.push(colors[newData.title])\n\n            // increment all other categories w 0 spent\n            datasetsCopy.forEach(function(val, i) {\n                var dataCopy = datasetsCopy[i].data.slice(0);\n                // console.log(dataCopy)\n                dataCopy.push(0);\n                dataCopy.shift()\n                datasetsCopy[i].data = dataCopy;\n            })\n\n            var newCat = {\n                label: newData.title,\n                data: this.makeNewArray(0, newData.amount),\n                borderColor: colors[newData.title],\n                backgroundColor: 'rgba(0, 0, 0, 0)',\n            }\n\n            datasetsCopy.push(newCat) }\n\n        else {\n            datasetsCopy.forEach(function(val, i) {\n                var dataCopy = datasetsCopy[i].data.slice(0);\n\n                //if chosen category already exists and needs an expense added\n                //to it, catch it\n                if (val.label===newData.title) {\n                    dataCopy.push(newData.amount);\n\n                    // increment appropriate place in donut dataset (w required copying)\n                    var j = a.indexOf(newData.title);\n                    var pro = prosCopy[0].data.slice(0);\n                    pro[j] = pro[j] + +newData.amount;\n                    prosCopy[0].data = pro;\n                }\n                //then increment all others w 0 spent\n                else { dataCopy.push(0); }\n                dataCopy.shift()\n                datasetsCopy[i].data = dataCopy;\n            })\n        }\n\n        this.setState({\n            proportions: Object.assign({}, s.proportions, {\n                datasets: prosCopy,\n                labels: a.slice(0)\n            }),\n            data: Object.assign({}, s.data, {\n                datasets: datasetsCopy,\n                labels: labelsNew\n            }),\n            ledger: ledgerCopy,\n            history: Object.assign({}, s.history, {\n                datasets: this.processNetWorth(s, newData),\n                labels: labelsNew\n            }),\n        });\n        // console.log(this.state.ledger)\n        // this.incrementLedger(newData);\n    }\n\n    decide(cats, date) {\n        var arr = Object.keys(cats);\n        var sum = arr.reduce((total, curr) => +total+ +curr, 0);\n        var decision = 0;\n        var copy = [];\n\n        arr.some(function (val, i) {\n            copy[i] = (i===0) ? +arr[i] : +arr[i] + +copy[i-1];\n            decision = val;\n            return range(0, sum) < copy[i];\n        });\n\n        cats[decision].times += 1;\n        console.log(cats)\n        return makeTransaction(cats[decision], date)\n    }\n\n    tick() {\n        this.setState({\n            category: this.decide(this.returnCats()),\n            txns: this.increment()\n        });\n    }\n\n    returnCats() {\n        var colors = this.returnColors();\n        return {\n            10: {\n                title: \"gym payment\",\n                display: \"Pay gym membership\",\n                color: colors[\"gym payment\"],\n                button: false,\n                times: 0,\n                vendors: [\n                    \"Anytime Fitness\"\n                ],\n                min: 50,\n                max: 50,\n                type: 'debit'\n            },\n            31: {\n                title: \"alcohol/bars\",\n                display: \"Go to a bar\",\n                color: colors[\"alcohol/bars\"],\n                button: true,\n                times: 0,\n                vendors: [\n                    \"Workhorse Bar\",\n                    \"drink.well.\",\n                    \"The Parlor\",\n                    \"Weather Up\"\n                ],\n                min: 5,\n                max: 50,\n                type: 'debit'\n            },\n            32: {\n                title: \"groceries\",\n                display: \"Pick up groceries\",\n                color: colors[\"groceries\"],\n                button: true,\n                times: 0,\n                vendors: [\n                    \"Fresh Plus Grocery\",\n                    \"Trader Joe's\",\n                    \"Whole Foods Great Hills Rd\",\n                    \"Dierbergs\"\n                ],\n                min: 10,\n                max: 80,\n                type: 'debit'\n            },\n            50: {\n                title: \"coffeeshop\",\n                display: \"Grab a coffee\",\n                color: colors[\"coffeeshop\"],\n                button: true,\n                times: 0,\n                vendors: [\n                    \"Quacks 43rd St Bakery\",\n                    \"Thunderbird Coffee\",\n                    \"Epoch Coffee North Loop\",\n                    \"Flightpath Coffeehouse\",\n                    \"Dolce Vita\",\n                    \"Monkey Nest Coffee\"\n                ],\n                min: 1.25,\n                max: 15,\n                type: 'debit'\n            },\n            13: {\n                title: \"gas/fuel\",\n                display: \"Get gas\",\n                color: colors[\"gas/fuel\"],\n                button: true,\n                times: 0,\n                vendors: [\n                    \"Shell 4429 Duval St\",\n                    \"Texaco Austin 5301 N Lamar\",\n                    \"Exxon\",\n                    \"North Loop Food Store\",\n                    \"Chevron Airport Blvd\",\n                    \"Gulf Gas Station\"\n                ],\n                min: 30,\n                max: 40,\n                type: 'debit'\n            },\n            4: {\n                title: \"cellphone\",\n                display: \"Pay cellphone bill\",\n                color: colors[\"cellphone\"],\n                button: false,\n                times: 0,\n                vendors: [\n                    \"ATT Thank you for your Online Payment\"\n                ],\n                min: 64,\n                max: 66,\n                type: 'debit'\n            },\n            35: {\n                title: \"restaurant\",\n                display: \"Go out to eat\",\n                color: colors[\"restaurant\"],\n                button: true,\n                times: 0,\n                vendors: [\n                    \"Foreign & Domestic\",\n                    \"East Side Pies\",\n                    \"Phara's\",\n                    \"Uchiko\",\n                    \"Chipotle\",\n                    \"Freebirds Airport Blvd\",\n                    \"Biscuits and Groovy\",\n                    \"Gordeaux's Donuts\",\n                    \"Habesha Ethiopian Restaurant and Bar\",\n                    \"Tyson's Tacos\"\n                ],\n                min: 12,\n                max: 50,\n                type: 'debit'\n            },\n            0: {\n                title: \"invest\",\n                display: \"Invest money\",\n                color: colors[\"invest\"],\n                button: true,\n                times: 0,\n                vendors:[\n                    \"Vanguard Investing\",\n                    \"Discover Online Banking\"\n                ],\n                min: 100,\n                max: 10000,\n                type: 'neither'\n            },\n            1: {\n                title: \"income\",\n                display: \"Earn some income\",\n                color: colors[\"income\"],\n                button: true,\n                times: 0,\n                vendors:[\n                    \"Freelancing\",\n                    \"Car washes\",\n                    \"Gave haircut\",\n                    \"Tutored\"\n                ],\n                min: 100,\n                max: 1000,\n                type: 'credit'\n            }\n\n        }\n    }\n\n    returnColors() {\n        return {\n            \"alcohol/bars\": '#A40E4C',\n            \"gas/fuel\": '#2C2C54',\n            \"groceries\": '#ACC3A6',\n            \"coffeeshop\": '#F5D6BA',\n            \"gym payment\": '#F49D6E',\n            \"restaurant\": 'rgba(60, 110, 113, 1)',\n            \"invest\": '#A7B0CA',\n            \"cellphone\": '#A5D86B',\n            \"income\": '#8EDCE6',\n        }\n    }\n    render() {\n        //             <h5>It is { String(this.state.category) }.</h5>\n        return (<div>\n        </div>)\n    }\n}\n\nexport default Context;\n","import React, { Component }from 'react';\nimport Context from '../Context'\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\n\nclass Chart extends Component {\n    static defaultProps = {\n        displayTitle: false,\n        displayLegend: true,\n        legendPosition: 'bottom',\n        titleSize: 25\n    }\n}\n\nexport class LineChart extends Chart {\n    constructor(props) {\n        super()\n        // console.log(props)\n    }\n\n    render(){\n        if (this.props.type===\"networth\") {\n            var data = this.props.chartData.history\n        } else if (this.props.type===\"donut\") {\n            var data = this.props.chartData.proportions\n        } else {\n            var data = this.props.chartData.data\n        }\n      // console.log(this.props)\n      return(\n        <div>\n        <Line\n              data = { data }\n              height={200}\n              options={{\n                  type: 'line',\n                  animation: {\n                      duration: 0,\n                      display: 'linear'\n                  },\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  legend: {\n                      labels : {usePointStyle: true},\n                      display: false,\n                      position: this.props.legendPosition\n                  }\n              }}\n        />\n        </div>\n      )\n    }\n}\nexport class DoughnutChart extends Chart {\n    constructor(props) {\n        super()\n        // console.log(props)\n    }\n\n    render(){\n      if (this.props.type===\"networth\") {\n          var data = this.props.chartData.history\n      } else if (this.props.type===\"donut\") {\n          var data = this.props.chartData.proportions\n      } else {\n          var data = this.props.chartData.data\n      }\n      // console.log(this.props)\n      return(\n        <div>\n        <Doughnut\n              data = { data }\n              height={200}\n              options={{\n                  animation: {\n                      duration: 0,\n                  },\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  legend: {\n                      labels : {usePointStyle: true},\n                      display: true,\n                      position: \"right\"\n                  }\n              }}\n        />\n        </div>\n      )\n    }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Context from './Context'\nimport { LineChart, BarChart, DoughnutChart, BarExample } from './components/Chart'\n\nconst netWorth = {\n    title: \"Net Worth Over Time\",\n    type: \"networth\"\n}\n\nlet txnsGeneral = {\n    title: \"Transactions Over Time\",\n    leftOfTitle: \"May 30, 2018\",\n    type: \"line\"\n}\n\nconst proportions = {\n    title: \"Spending in Each Category\",\n    type: \"donut\"\n}\n\nconst ledger = {\n    title: \"Ledger of Expenses\",\n    type: \"ledger\"\n}\n\nconst Header = function(props) {\n    return <div className='background'>\n        <div className=\"titleHolder\">\n                <span><b>{props.first}</b></span>\n                <span>{props.second}</span>\n                </div>\n          </div>;\n      }\n\n\nclass ChartComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            properties: props,\n        }\n    }\n\n    makeComponent() {\n        var type = this.props.config.type;\n        var title = this.props.config.title;\n        console.log(title)\n        var total = [];\n        total.push(<Header key={title+\"_title\"}  first={this.props.config.leftOfTitle} second={title}/>)\n        if (type == \"donut\") {\n            total.push(<DoughnutChart key={title} chartData={this.props.data} type={this.props.config.type} />)\n        } else {\n            total.push(<LineChart key={title} chartData={this.props.data} type={this.props.config.type} />)\n        }\n        console.log(this.props)\n        return (total);\n    }\n    render() {\n      return (\n          this.makeComponent()\n      );\n    }\n}\n\nexport class App extends Context {\n    makeButtons() {\n        let total = [];\n        var cats = this.returnCats()\n        for (let c in cats) {\n            // console.log(cats[c]);\n            if (cats[c].button) {\n                var styles = {\n                    backgroundColor: cats[c].color,\n                    border: \"solid 1px \" +  cats[c].color\n                };\n            total.push(<a href=\"#\" style={styles} className={\"square_btn\"} key={c}>{cats[c].display}</a>)\n            }\n        }\n        return (total)\n    }\n    makeTxns() {\n        let total = [];\n        var ledger = this.state.ledger\n        var colors = this.returnColors()\n\n        for (let t in ledger) {\n            var styles = {\n                color: colors[ledger[t].title],\n                borderBottom: '1px dotted gainsboro'\n            };\n            total.push(\n                <tr href=\"#\" style={styles} className={\"ledgerRow\"} key={t}>\n                    <td>{ledger[t].date}</td>\n                    <td>{ledger[t].amount}</td>\n                    <td>{ledger[t].title}</td>\n                    <td>{ledger[t].vendor}</td>\n                </tr>)\n            }\n        return (total)\n    }\n\n  render() {\n    var data = this.state;\n    return (\n    <>\n      <div className=\"grid-container-2-left\">\n          <div>\n              <ChartComponent config={txnsGeneral} data = {data} />\n          </div>\n\n          <div>\n              <Header first=\"\" second=\"Add a Transaction:\"/>\n              <div className=\"buttonHolder\">\n              {this.makeButtons()}\n            </div>\n          </div>\n      </div>\n      <div className=\"grid-container-2-right\">\n          <div>\n          <ChartComponent config={proportions} data = { data }/>\n\n          </div>\n          <div>\n            <Header second={\"Ledger of Transactions\"} />\n            <div className=\"ledgerTable\">\n            <table>\n                <tbody>\n              <tr>\n                <th className=\"date\">{\"Date\"}</th>\n                <th className=\"amount\">{\"Amount\"}</th>\n                <th className=\"category\">{\"Category\"}</th>\n                <th className=\"vendor\">{\"Vendor\"}</th>\n              </tr>\n              {this.makeTxns()}\n              </tbody>\n            </table>\n            </div>\n          </div>\n      </div>\n      <div className=\"grid-container-1\">\n          <div>\n              <ChartComponent config={ netWorth } data = { data }/>\n          </div>\n      </div>\n    </>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}